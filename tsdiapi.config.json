{
  "name": "dboptions",
  "description": "A TSDIAPI plugin to extend Prisma functionality with dynamic database options.",
  "variables": [
    {
      "name": "DBOPTIONS_AUTO_REGISTER_CONTROLLERS",
      "type": "boolean",
      "default": true,
      "configurable": true,
      "description": "Automatically register controllers",
      "inquirer": {
        "type": "confirm",
        "message": "Do you want to enable automatic controller registration?",
        "default": true
      }
    }
  ],
  "requiredPackages": [
    "@tsdiapi/prisma",
    "@prisma/client"
  ],
  "requiredPaths": [
    "prisma/schema.prisma"
  ],
  "files": [
    {
      "source": "files/src/*.ts",
      "destination": "src/",
      "isHandlebarsTemplate": true
    }
  ],
  "generators": [
    {
      "name": "feature",
      "description": "Generate a feature folder for database options",
      "args": [
        {
          "name": "entityName",
          "description": "The name of the entity that will store the options",
          "inquirer": {
            "type": "input",
            "message": "Enter the name of the entity that will store the options",
            "default": "Option"
          }
        }
      ],
      "files": [
        {
          "source": "files/src/*.ts",
          "destination": "src/",
          "isRoot": true,
          "isHandlebarsTemplate": true
        },
        {
          "source": "generators/feature/*.*",
          "destination": "[name]",
          "overwrite": false,
          "isHandlebarsTemplate": true
        }
      ],
      "fileModifications": [
        {
          "path": "prisma/schema.prisma",
          "mode": "append",
          "isHandlebarsTemplate": true,
          "match": "model\\s+{{pascalCase entityName}}\\s*\\{",
          "expected": false,
          "content": "model {{pascalCase entityName}} {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  value     Json\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}"
        }
      ],
      "requiredPaths": [
        "prisma/schema.prisma"
      ],
      "postMessages": [
        "✅ Feature {{name}} generated successfully!",
        "⚠️ Please ensure to run the necessary database migrations and verify the Prisma database connection. This is the user's responsibility."
      ],
      "afterGenerate": {
        "command": "npx prisma generate"
      }
    }
  ],
  "postFileModifications": [
    {
      "path": "prisma/schema.prisma",
      "mode": "append",
      "when": "DBOPTIONS_AUTO_REGISTER_CONTROLLERS == true",
      "match": "model\\s+DbOption\\s*\\{",
      "expected": false,
      "isHandlebarsTemplate": true,
      "content": "model DbOption {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  value     Json\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}"
    }
  ],
  "preMessages": [
    "⚠️ Before proceeding with the configuration, ensure that Prisma is installed and set up.",
    "ℹ️ If Prisma is not installed, add the plugin using: tsdiapi plugins add prisma",
    "❌ You can interrupt the configuration now if the plugin has not been added previously.",
    "✅ To resume configuration later, use: tsdiapi plugins config dboptions"
  ],
  "postMessages": [
    "✅ Database options successfully installed!",
    "⚠️ Please ensure to run the necessary database migrations and verify the Prisma database connection. This is the user's responsibility."
  ],
  "afterInstall": {
    "command": "npx prisma generate",
    "when": "DBOPTIONS_AUTO_REGISTER_CONTROLLERS == true"
  }
}